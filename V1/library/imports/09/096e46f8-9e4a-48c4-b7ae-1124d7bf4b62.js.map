{"version":3,"sources":["assets\\scripts\\Games\\eliminating\\script\\Map.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import Service from './Service';\r\nimport Block from './Block';\r\nimport EliminatingInterface from '../../../interface/game/eliminating';\r\nimport EliminatingBlock from './EliminatingBlock';\r\n// TODO: 掉落后顺序可能错乱\r\n// TODO: 掉落时如果出现三连等现象可能出现方块消失\r\n\r\nexport default\r\n    /**\r\n     * 地图生成器\r\n     */\r\n    class MapCreate {\r\n    /**\r\n     * 地图数据\r\n     */\r\n    private _map: number[][] = [];\r\n\r\n    /**\r\n     * 附带脚本的复杂地图数据\r\n     */\r\n    private _mapScript: Block[][] = [];\r\n\r\n    /**\r\n     * 地图容器\r\n     */\r\n    private ccc: EliminatingInterface.MapInterface;\r\n\r\n    /**\r\n     * 地图数据\r\n     */\r\n    get data() {\r\n        return this._map;\r\n    }\r\n\r\n    /**\r\n     * 附带脚本的复杂地图数据\r\n     */\r\n    get mapScript() {\r\n        return this._mapScript;\r\n    }\r\n\r\n    /**\r\n     * 下落检测事件\r\n     */\r\n    fallEvent: number = 0;\r\n\r\n    destoryCount: number = 0;\r\n\r\n    deepHash: {\r\n        [key: string]: {\r\n            [key: number]: number;\r\n        }\r\n    } = {};\r\n\r\n    /**\r\n     * 下落方块\r\n     */\r\n    fallBlocks: EliminatingBlock[][] = [];\r\n\r\n    /**\r\n     * 任务列队\r\n     */\r\n    tasks = [];\r\n\r\n\r\n    /**\r\n     * 地图生成器\r\n     * @param ySize      y轴\r\n     * @param xSize      x轴\r\n     * @param cccOptions ccc内置资源\r\n     */\r\n    constructor(ySize: number, xSize: number, cccOptions: EliminatingInterface.MapInterface) {\r\n        let Map = [];\r\n        this.ccc = cccOptions;\r\n        // 格子横轴最大宽度\r\n        let maxX = ySize;\r\n\r\n        // 显示区域\r\n        for (let pointX = 0; pointX < xSize; pointX++) {\r\n            const xMap = [];\r\n            for (let pointY = 0; pointY < ySize; pointY++) {\r\n                xMap.push(Service.randomNumber(Service.MAX, Service.MIN));\r\n            }\r\n            Map.push(xMap);\r\n        }\r\n        this._map = Map;\r\n        this._mapScript = Map;\r\n        // 顶部轴位置扩充\r\n        this.fallBlocks = new Array(maxX).fill([]).map(() => []);\r\n\r\n        // 重复方块筛除\r\n        let checkQuery;\r\n        while (checkQuery = this.mapCheckLine()) {\r\n            this.mapEliminateLine(checkQuery.y, checkQuery.x);\r\n        }\r\n        checkQuery = null;\r\n        console.log('地图中是否有相连：' + this.mapCheckLine());\r\n\r\n        // 执行删除地图方法\r\n        this.mapCreate(Map);\r\n    }\r\n\r\n\r\n    /**\r\n     * 创建地图\r\n     * @param mapData 地图资源\r\n     */\r\n    mapCreate(mapData: number[][]) {\r\n        // 顶部偏移值\r\n        const offsetTop = 50;\r\n        // 左侧偏移值\r\n        const screenWidth = cc.view.getFrameSize().width;\r\n        const offsetLeft = ((screenWidth - 610) / 2) + 90;\r\n        this._mapScript = [];\r\n        const { _mapScript } = this;\r\n        mapData.forEach((yMap, y) => {\r\n            _mapScript.push([]);\r\n            yMap.forEach((blockType, x) => {\r\n                const mapInter = cc.instantiate(this.ccc.mapPrefab);\r\n                const { width, height } = mapInter;\r\n                mapInter.x += x * width + offsetLeft;\r\n                mapInter.y -= y * height + offsetTop;\r\n                this.ccc.mapBox.addChild(mapInter);\r\n                _mapScript[y].push(new Block(y, x, blockType, mapInter, this.ccc, _mapScript));\r\n            });\r\n        });\r\n    }\r\n\r\n\r\n    /**\r\n     * 设置指定位置的方块\r\n     * @param y         Y轴\r\n     * @param x         x轴\r\n     * @param blockType 方块类型\r\n     */\r\n    setBlock(y: number, x: number, blockType: number) {\r\n        if (!this._map[y] || this._map[y][x] === undefined) return console.error('setBlock Set Error: ', this._map, y, x);\r\n        this._map[y][x] = blockType + 1;\r\n        const currentScript = this._mapScript[y][x].script;\r\n        if (currentScript) {\r\n            currentScript.type = blockType + 1;\r\n\t\t\tcurrentScript.setFrame(currentScript.setFrameType);\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * 地图已相连检测\r\n     */\r\n    mapCheckLine() {\r\n        let isLine: unknown = false;\r\n        this.earch((y, x) => {\r\n            const checkQuery = this.checkLine(y, x);\r\n            if (checkQuery.type !== 0) {\r\n\t\t\t\tisLine = { y, x, destoryBlock: checkQuery.destoryBlock };\r\n                return true;\r\n            }\r\n        });\r\n\r\n        return isLine;\r\n    }\r\n\r\n\r\n    /**\r\n     * 地图消除已相连\r\n     * @param y Y轴\r\n     * @param x X轴\r\n     */\r\n    mapEliminateLine(y?: number, x?: number) {\r\n        const { _map } = this;\r\n        // 指定位置消除\r\n        if (y !== undefined && x !== undefined) {\r\n            return this.setBlock(y, x, Service.randomNumber(Service.MAX, Service.MIN, _map[y][x]) - 1);\r\n        }\r\n\r\n        // 全局扫描消除\r\n        this.earch((y, x) => {\r\n            const checkQuery = this.checkLine(y, x);\r\n            if (checkQuery.type !== 0) {\r\n                this.setBlock(y, x, Service.randomNumber(Service.MAX, Service.MIN, checkQuery.index) - 1);\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    /**\r\n     * 互换方块\r\n     * @param Point1 方块1\r\n     * @param Point2 方块2\r\n     */\r\n    async exchangeBlock(Point1: Block, Point2: Block) {\r\n        const move: any = {\r\n            x: Point1.x - Point2.x,\r\n            y: Point1.y - Point2.y,\r\n\t\t};\r\n\r\n        // 移动方向的方块反向移动\r\n\t\tawait Promise.all([\r\n\t\t\tthis.moveAnimation(Point1, move, false, .3),\r\n\t\t\tthis.moveAnimation(Point2, move, true, .3),\r\n\t\t]);\r\n        \r\n        // 反向互换方块脚本\r\n        const Point1Script = Point1.script;\r\n        Point1.script = Point2.script;\r\n        Point2.script = Point1Script;\r\n        // 更新地图数据\r\n        this.setBlock(Point1.key.y, Point1.key.x, Point1.script.type);\r\n        this.setBlock(Point2.key.y, Point2.key.x, Point2.script.type);\r\n    }\r\n\r\n\r\n    /**\r\n     * 移动动画\r\n     * @param currentNode 被移动节点\r\n     * @param moveInfo    移动距离\r\n     * @param reverse     是否逆向\r\n     * @param noteMove    强制移动\r\n     */\r\n    async moveAnimation(\r\n        currentNode: Block,\r\n        moveInfo: EliminatingInterface.Point,\r\n        reverse: boolean = false,\r\n        duration: number = .5,\r\n        noteMove: boolean = false,\r\n    ) {\r\n        if (currentNode.script.type === -1 && !noteMove) return false;\r\n        await currentNode.script.move({\r\n            x: moveInfo.x * (reverse ? -1 : 1),\r\n            y: moveInfo.y * (reverse ? -1 : 1),\r\n        }, duration);\r\n    }\r\n\r\n\r\n    /**\r\n     * 销毁方块[动画]\r\n     * @param y      Y轴\r\n     * @param x      X轴\r\n     * @param blocks 方块资源\r\n     * @param hash   HASH\r\n     * @param down   是否进行下降\r\n     */\r\n    async destoryBlock(y: number, x: number, block?: Block, hash?: string, down: boolean = true) {\r\n        let cuurent = block || (this._mapScript[y] ? this._mapScript[y][x] : false);\r\n        if (cuurent) {\r\n            // 异常Block Array处理\r\n            if (cuurent instanceof Array) {\r\n                console.error(`  new ->${hash}: `);\r\n                return cuurent.forEach((block: Block) => this.destoryBlock(block.key.y, block.key.x, block, hash));\r\n            }\r\n\r\n            // 正常Block处理\r\n            const { node } = cuurent.script.icon;\r\n\r\n            await new Promise(res => {\r\n                node.runAction(\r\n                    cc.sequence(\r\n                        cc.scaleTo(.05, 0).easing(cc.easeBounceOut()),\r\n                        cc.callFunc(res),\r\n                    ),\r\n                );\r\n            })\r\n            this.destoryCount--;\r\n            this.setBlock(cuurent.key.y, cuurent.key.x, -1);\r\n            await this.fallCreateCheck(cuurent, hash);\r\n            // await this.destoryFall();\r\n            this.destoryCount++;\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * 上升方块创建检测\r\n     * @param y 二维数组y\r\n     * @param x 二维数组x\r\n     * @param hash   HASH\r\n     */\r\n    async fallCreateCheck(cuurentBlock: Block, hash?: string) {\r\n        // 增加掉落方块\r\n        const { x, y } = cuurentBlock.key;\r\n        const { deepHash } = this;\r\n        const { node } = cuurentBlock.script.icon;\r\n        const prevIndex = this.fallBlocks[x].push(cuurentBlock.script);\r\n\r\n        if (hash) {\r\n            if (!deepHash[hash]) deepHash[hash] = {};\r\n            if (deepHash[hash][x] === undefined) deepHash[hash][x] = 0;\r\n            deepHash[hash][x]++;\r\n        }\r\n        let hashNum = hash ? deepHash[hash][x] : 0;\r\n        node.scale = .7;\r\n\r\n        await this.moveAnimation(cuurentBlock, {\r\n            x: 0,\r\n            y: (y + (hash ? hashNum : prevIndex)) * -90,\r\n        }, false, 0, true);\r\n    }\r\n\r\n\r\n    /**\r\n     * 消除下落逻辑\r\n     * @param y 二维数组y\r\n     * @param x 二维数组x\r\n     * @param hash   HASH\r\n     * @param down   是否进行下降\r\n     */\r\n    async destoryFall() {\r\n\t\tconst { _map, _mapScript, fallBlocks } = this;\r\n\r\n\t\tfor (const x in fallBlocks) {\r\n\t\t\tconst xBlocks = fallBlocks[x];\r\n\t\t\tif (!xBlocks.length) continue;\r\n\r\n\t\t\tlet y = _map.length;\r\n\t\t\tlet start = -1;\r\n\r\n\t\t\twhile (y >= 0) {\r\n\t\t\t\tif (_map[y]) {\r\n\t\t\t\t\tconst lineType = _map[y][x];\r\n\t\t\t\t\t// 从下往上推算出起点0\r\n\t\t\t\t\tif (lineType === 0 && start === -1) {\r\n\t\t\t\t\t\tstart = y;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// 整体下落计算 终点\r\n\t\t\t\t\tif ((lineType !== 0 || (y === 0 && lineType === 0)) && start != -1) {\r\n\t\t\t\t\t\tconst downList = [];\r\n\t\t\t\t\t\tlet end = y;\r\n\r\n\t\t\t\t\t\t// 消失方块上方的所有方块和不可见区域方块整体向下异步移动\r\n\t\t\t\t\t\tif (y > 0 || (y === 0 && lineType !== 0)) {\r\n\t\t\t\t\t\t\twhile (y >= 0) {\r\n\t\t\t\t\t\t\t\tif (_mapScript[y] && _mapScript[y][x]) {\r\n\t\t\t\t\t\t\t\t\tdownList.push(_mapScript[y][x].script);\r\n\t\t\t\t\t\t\t\t\ty--;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tend--;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// 得到不可见区域中的方块\r\n\t\t\t\t\t\tdownList.push(...fallBlocks[x].map(block => {\r\n\t\t\t\t\t\t\tblock.setFrame(Service.randomNumber(Service.MAX, Service.MIN, block.setFrameType) - 1);\r\n\t\t\t\t\t\t\treturn block;\r\n\t\t\t\t\t\t}));\r\n\r\n\t\t\t\t\t\tfallBlocks[x] = [];\r\n\t\t\t\t\t\tconst moveDown = (start - end) || .5;\r\n\t\t\t\t\t\tfor (const key in downList) {\r\n\t\t\t\t\t\t\tconst target = downList[key];\r\n\t\t\t\t\t\t\ttarget.move({\r\n\t\t\t\t\t\t\t\tx: 0,\r\n\t\t\t\t\t\t\t\ty: moveDown * 90\r\n\t\t\t\t\t\t\t}, .1 * moveDown);\r\n\t\t\t\t\t\t\tlet moveY = start - Number(key);\r\n\t\t\t\t\t\t\tif (moveY < 0) moveY = 0;\r\n\t\t\t\t\t\t\t_mapScript[moveY][x].script = target;\r\n\t\t\t\t\t\t\tthis.setBlock(moveY, Number(x), target.setFrameType);\r\n\r\n\t\t\t\t\t\t\t// 方案一：相连检测\r\n\t\t\t\t\t\t\t// const checkQuery = this.checkLine(moveY, Number(x));\r\n\t\t\t\t\t\t\t// if (checkQuery.destoryBlock.length) {\r\n\t\t\t\t\t\t\t// \tfor (const block of checkQuery.destoryBlock) {\r\n\t\t\t\t\t\t\t// \t\tawait this.destoryBlock(0, 0, block);\r\n\t\t\t\t\t\t\t// \t}\r\n\t\t\t\t\t\t\t// \tawait this.destoryFall();\r\n\t\t\t\t\t\t\t// }\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\ty--;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\t// 方案二：全图相连检测\r\n\t\tconst destoryBlock: any = await new Promise((res) => {\r\n\t\t\tthis.earch((y, x) => {\r\n\t\t\t\tconst checkQuery = this.checkLine(y, x);\r\n\t\t\t\tif (checkQuery.destoryBlock.length) {\r\n\t\t\t\t\tres(checkQuery.destoryBlock);\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tres();\r\n\t\t});\r\n\t\tif (destoryBlock) {\r\n\t\t\tfor (const block of destoryBlock) {\r\n\t\t\t\tawait this.destoryBlock(0, 0, block);\r\n\t\t\t}\r\n\t\t\tawait this.destoryFall();\r\n\t\t}\r\n    }\r\n\r\n\r\n    /**\r\n     * 检测方块相连\r\n     * @param y          目标x\r\n     * @param x          目标y\r\n     * @param targetType 目标类型\r\n     */\r\n    checkLine(y: number, x: number) {\r\n        const { _map, _mapScript } = this;\r\n        // 达成三连数量\r\n        let xTarget: Block[] = [];\r\n        let yTarget: Block[] = [];\r\n        // 获取目标方块\r\n\r\n        const index = _map[y] ? _map[y][x] : false;\r\n        const query = {\r\n            type: 0,\r\n            xTarget,\r\n            yTarget,\r\n            index: index || -1,\r\n            destoryBlock: [],\r\n        };\r\n\r\n        // 下标为空的情况下跳出\r\n        if (!index) return query;\r\n\r\n        // x轴三连检测\r\n        for (let pX = x - 2; pX <= x + 2; pX++) {\r\n            const chackBlock = _map[y][pX];\r\n            if (chackBlock && chackBlock === index) {\r\n                xTarget.push(_mapScript[y][pX]);\r\n            } else if (xTarget.length < 3) {\r\n                xTarget = [];\r\n            } else {\r\n                break;\r\n            }\r\n        }\r\n\r\n\r\n        // y轴三连检测\r\n        for (let pY = y - 2; pY <= y + 2; pY++) {\r\n            const chackBlock = _map[pY] ? _map[pY][x] : false;\r\n            if (chackBlock && chackBlock === index) {\r\n                yTarget.push(_mapScript[pY][x]);\r\n            } else if (yTarget.length < 3) {\r\n                yTarget = [];\r\n            } else {\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (xTarget.length === 5 || yTarget.length === 5) {         // 横或竖5连判断\r\n            // console.log('彩色鸡');\r\n            // query.type = 1;\r\n        } else if (xTarget.length + yTarget.length > 5) {           // L形判断\r\n            // console.log('发光本体');\r\n            // query.destoryBlock = [ ...xTarget, yTarget ];\r\n            // query.type = 2;\r\n        } else if (yTarget.length >= 3 || xTarget.length >= 3) {    // 三连判断\r\n            console.log('三连');\r\n            if (xTarget.length >= 3) {\r\n                query.destoryBlock = xTarget;\r\n                query.type = 3.1;\r\n            } else if (yTarget.length >= 3) {\r\n                query.destoryBlock = yTarget;\r\n                query.type = 3.2;\r\n            }\r\n        }\r\n\r\n        query.xTarget = xTarget;\r\n        query.yTarget = yTarget;\r\n\r\n        return query;\r\n    }\r\n\r\n\r\n    /**\r\n     * 是否允许指定方向移动\r\n     */\r\n    isAllowMove(y: number, x: number, moveInfo: EliminatingInterface.MoveBoolean): false | Block {\r\n        let targetBlock: false | Block = false;\r\n        const { _map, _mapScript } = this;\r\n        const { top, right, bottom, left } = moveInfo;\r\n\r\n        // 顶部检测\r\n        if (top && _map[y - 1] && _map[y - 1][x]) {\r\n            targetBlock = _mapScript[y - 1][x];\r\n        }\r\n        // 右侧检测\r\n        else if (right && _map[y] && _map[y][x + 1]) {\r\n            targetBlock = _mapScript[y][x + 1];\r\n        }\r\n        // 底部检测\r\n        else if (bottom && _map[y + 1] && _map[y + 1][x]) {\r\n            targetBlock = _mapScript[y + 1][x];\r\n        }\r\n        // 左侧检测\r\n        else if (left && _map[y] && _map[y][x - 1]) {\r\n            targetBlock = _mapScript[y][x - 1];\r\n        }\r\n\r\n        return targetBlock;\r\n    }\r\n\r\n\r\n    /**\r\n     * 遍历地图数据\r\n     * @param callback 回调 (返回true则结束遍历)\r\n     * @param mapData  地图数据\r\n     */\r\n    earch(callback: (y: number, x: number, map: number[][]) => boolean | void, mapData?: number[][]) {\r\n        const { _map } = this;\r\n        mapData = mapData || _map;\r\n\r\n        for (let y = 0, yLen = mapData.length - 1; y <= yLen; y++) {\r\n            const targetY = mapData[y];\r\n            for (let x = 0, xLen = targetY.length - 1; x <= xLen; x++) {\r\n                if (callback(y, x, mapData)) break;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * 转换数据模拟格式\r\n     */\r\n    transformDataModel(data: any[]) {\r\n        return data.map(item => {\r\n            return item.map(itemVal => {\r\n                if (typeof itemVal === 'number') {\r\n                    return {\r\n                        script: {\r\n                            type: itemVal,\r\n                        },\r\n                    };\r\n                } else {\r\n                    return itemVal.script.type;\r\n                }\r\n            })\r\n        });\r\n    }\r\n}\r\n"]}