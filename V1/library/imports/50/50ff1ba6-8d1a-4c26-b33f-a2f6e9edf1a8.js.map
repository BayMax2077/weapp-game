{"version":3,"sources":["assets\\scripts\\Games\\eliminating\\script\\EliminatingBlock.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\nimport Service from './Service';\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class EliminatingBlock extends cc.Component {\r\n  /**\r\n   * icon资源类型\r\n   * 1：熊\r\n   * 2：狐狸\r\n   * 3：老鼠\r\n   * 4：青蛙\r\n   * 5：鸟\r\n   */\r\n  @property(cc.SpriteFrame) icons: cc.SpriteFrame[] = [];\r\n  /**\r\n   * 发光状态的icon资源\r\n   * 1：熊\r\n   * 2：狐狸\r\n   * 3：老鼠\r\n   * 4：青蛙\r\n   * 5：鸟\r\n   */\r\n  @property(cc.SpriteFrame) iconsGon: cc.SpriteFrame[] = [];\r\n  // 竖轴资源\r\n  @property(cc.SpriteFrame) Hove: cc.SpriteFrame = null;\r\n  // 横轴资源\r\n  @property(cc.SpriteFrame) Vove: cc.SpriteFrame = null;\r\n  // icon Sprite 节点\r\n  @property(cc.Sprite) icon: cc.Sprite = null;\r\n  // 块类型\r\n  blockType: number = 0;\r\n  // 轴体节点\r\n  oveNode: cc.Node;\r\n  // 资源下标\r\n  setFrameType: number = 0;\r\n  // 块类型\r\n  get type() {\r\n    return this.node ? this.blockType : -1;\r\n  }\r\n  set type(type: number) {\r\n    this.blockType = type - 1;\r\n  }\r\n\r\n\r\n  /**\r\n   * 初始化入口\r\n   */\r\n  init(opt: {\r\n    /**\r\n     * icon类型\r\n     */\r\n    type: number;\r\n  }) {\r\n    const { node } = this;\r\n    const { x, y, width, height } = node;\r\n    this.type = opt.type;\r\n    this.icon.spriteFrame = this.icons[opt.type - 1];\r\n    this.setFrameType = opt.type - 1;\r\n    return {\r\n      x,\r\n      y,\r\n      w: width,\r\n      h: height,\r\n      node: this.node,\r\n      script: this,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * 设置方块贴图\r\n   * @param num 类型\r\n   */\r\n  setFrame(num?: number) {\r\n    if (num === undefined) num = Service.randomNumber(Service.MAX - 1, Service.MIN, this.type);\r\n    this.icon.spriteFrame = this.icons[num];\r\n    this.setFrameType = num;\r\n  }\r\n\r\n\r\n  /**\r\n   * 移动节点\r\n   * @param offset   移动距离\r\n   * @param duration 动画时间\r\n   */\r\n  async move(\r\n    offset: {\r\n      x: number;\r\n      y: number;\r\n    },\r\n    duration: number = .5,\r\n    callbackFn?: any,\r\n  ) {\r\n    const { node, icon } = this;\r\n    if (node && icon.node) {\r\n      // const { width, height } = node;\r\n      // const x = offset.x < 0 ? 1 : -1;\r\n      // const y = offset.y < 0 ? 1 : -1;\r\n      return new Promise((res, rej) => {\r\n        icon.node.runAction(\r\n          cc.sequence(\r\n            cc.moveBy(\r\n              duration,\r\n              -offset.x,\r\n              -offset.y,\r\n              // offset.x ? width * x : 0,\r\n              // offset.y ? height * y : 0,\r\n            ).easing(cc.easeSineIn()),\r\n            cc.callFunc(() => res(callbackFn ? callbackFn() : {})),\r\n          ),\r\n        );\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * 发光方法\r\n   * @param toggle 是否发光\r\n   */\r\n  toggleLuminescence(toggle: boolean) {\r\n    this.icon.spriteFrame = this[toggle ? 'iconsGon' : 'icons'][this.blockType];\r\n  }\r\n\r\n\r\n  /**\r\n   * 显示横轴或竖轴\r\n   * @param ovrType\r\n   * - false: 关闭显示\r\n   * - h: 竖轴\r\n   * - v: 横轴\r\n   */\r\n  toggleOve(ovrType: false | string) {\r\n    const node = new cc.Node();\r\n    const sprite = node.addComponent(cc.Sprite);\r\n    if (this.oveNode) {\r\n      this.oveNode.destroy();\r\n    }\r\n    if (typeof ovrType === 'string') {\r\n      sprite.spriteFrame = ovrType === 'h' ? this.Hove : this.Vove;\r\n      this.icon.node.addChild(node);\r\n      this.oveNode = node;\r\n      // this.node.addChild(node);\r\n      // node.height = this.node.height;\r\n      // node.y -= node.height / 2;\r\n      // node.x += this.node.width / 2;\r\n    }\r\n  }\r\n}\r\n"]}