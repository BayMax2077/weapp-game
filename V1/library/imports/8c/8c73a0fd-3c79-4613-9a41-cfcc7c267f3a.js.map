{"version":3,"sources":["assets\\scripts\\utils\\gameSetting.ts"],"names":[],"mappings":";;;;;;AAAA,wCAAmC;AAEnC,OAAO;AACP,IAAI,OAAO,GAAQ,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC,IAAI,IAAI,CAAC,CAAC;AAE3E,IAAM,QAAQ,GAAG;IAEf;;OAEG;IACH,GAAG,EAAE,IAAI;IAET;;OAEG;IACH,MAAM,EAAE;QACN;;WAEG;QACH,KAAK,EAAE,EAAE;QACT;;WAEG;QACH,OAAO,EAAE,CAAC;KACX;IAED;;;;;;OAMG;IACH,GAAG,EAAE,CAAC,CAAC;CACR,CAAC;AACF,IAAM,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,QAAQ,CAAC;AAChE,4BAA4B;AAC5B,kBAAe;IAOb;QALA;;WAEG;QACH,WAAM,GAAG,QAAQ,CAAC;QAGhB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IAGD;;;OAGG;IACH,8BAAa,GAAb,UAAc,MAAuB;QAAvB,uBAAA,EAAA,cAAuB;QACnC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,mBAAmB,EAAE,IAAI,CAAC,CAAC;QAExC,OAAO;QACP,EAAE,CAAC,WAAW,CAAC,cAAc,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QACnD,OAAO;QACP,0DAA0D;QAE1D,OAAO;QACP,YAAY,CAAC,OAAO,CAAC,aAAa,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;QAEjE,SAAS;QACT,MAAM,IAAI,EAAE,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;IAC9B,CAAC;IAGD;;;OAGG;IACH,qBAAI,GAAJ,UAAK,QAAgB;QACX,IAAA,KAAK,GAAK,eAAK,MAAV,CAAW;QACxB,KAAK,IAAM,KAAK,IAAI,KAAK,EAAE;YACzB,IAAM,WAAW,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC;YACjC,IAAI,WAAW,CAAC,IAAI,KAAK,QAAQ,IAAI,WAAW,CAAC,OAAO,KAAK,QAAQ,EAAE;gBACrE,OAAO,WAAW,CAAC;aACpB;SACF;IACH,CAAC;IACH,aAAC;AAAD,CA9CmB,AA8ClB,GAAA,CAAA","file":"","sourceRoot":"/","sourcesContent":["import State from '../utils/state';\r\n\r\n// 帧率设置\r\nlet storage: any = JSON.parse(localStorage.getItem('gameSetting') || '{}');\r\n\r\nconst _CONFIG_ = {\r\n\r\n  /**\r\n   * 背景音乐开关\r\n   */\r\n  bgm: true,\r\n\r\n  /**\r\n   * 音量\r\n   */\r\n  volume: {\r\n    /**\r\n     * 背景音乐\r\n     */\r\n    music: .4,\r\n    /**\r\n     * 音效\r\n     */\r\n    effects: 1,\r\n  },\r\n\r\n  /**\r\n   * 游戏帧率\r\n   * - -1: 无上限\r\n   * - 60: 60帧\r\n   * - 30: 30帧\r\n   * - 15: 15帧\r\n   */\r\n  fps: -1,\r\n};\r\nconst config = Object.keys(storage).length ? storage : _CONFIG_;\r\n// cc.game.setFrameRate(60);\r\nexport default new class System {\r\n\r\n  /**\r\n   * 游戏配置\r\n   */\r\n  config = _CONFIG_;\r\n\r\n  constructor() {\r\n    this.config = config;\r\n    this.updateSetting();\r\n  }\r\n\r\n  \r\n  /**\r\n   * 触发游戏设置\r\n   * @param reboot 是否重启游戏\r\n   */\r\n  updateSetting(reboot: boolean = false) {\r\n    cc.game.emit('updateGameSetting', this);\r\n\r\n    // 音乐音量\r\n    cc.audioEngine.setMusicVolume(config.volume.music);\r\n    // 音效音量\r\n    // cc.audioEngine.setEffectsVolume(config.volume.effects);\r\n\r\n    // 存储变更\r\n    localStorage.setItem('gameSetting', JSON.stringify(this.config));\r\n\r\n    // 判断是否重启\r\n    reboot && cc.game.restart();\r\n  }\r\n\r\n\r\n  /**\r\n   * 获取游戏信息\r\n   * @param gameName 游戏名\r\n   */\r\n  info(gameName: string) {\r\n    const { games } = State;\r\n    for (const index in games) {\r\n      const currentGame = games[index];\r\n      if (currentGame.name === gameName || currentGame.name_en === gameName) {\r\n        return currentGame;\r\n      }\r\n    }\r\n  }\r\n}\r\n"]}