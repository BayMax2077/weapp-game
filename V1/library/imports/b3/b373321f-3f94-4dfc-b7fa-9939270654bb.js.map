{"version":3,"sources":["assets\\scripts\\Loading\\loadingPackage.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;;;;GAIG;AACH,SAA8B,WAAW,CACrC,QAGC,EACD,QAcY;;;;;;oBAaJ,KAAK,GAAU,QAAQ,MAAlB,EAAE,GAAG,GAAK,QAAQ,IAAb,CAAc;oBAC1B,QAAQ,GAAG,KAAK,CAAC,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC;wCAEhC,QAAQ;;;;;oCACT,OAAO,GAAG,GAAG,CAAC,QAAQ,CAAC,CAAC;oCAC9B,qBAAM,IAAI,OAAO,CAAO,UAAC,OAAO;4CAC5B,4DAA4D;4CAC5D,mBAAmB;4CACnB,uCAAuC;4CACvC,UAAU;4CACV,mBAAmB;4CACnB,8BAA8B;4CAC9B,qBAAqB;4CACrB,2BAA2B;4CAC3B,sBAAsB;4CACtB,qEAAqE;4CACrE,WAAW;4CACX,QAAQ;4CACR,EAAE,CAAC,SAAS,CAAC,OAAO,CAAC,OAAO,EAAE,UAAC,GAAG;gDAC9B,IAAI,GAAG,EAAE;oDACL,OAAO,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;iDAC7B;gDACD,OAAO,EAAE,CAAC;gDACV,QAAQ,IAAI,QAAQ,CAChB,OAAO,EACP,CAAC,QAAQ,GAAG,CAAC,EACb,QAAQ,EACR,aAAW,OAAO,cAAQ,CAAC,QAAQ,GAAG,CAAC,UAAI,GAAG,CAAC,MAAM,MAAG,CAC3D,CAAC;4CACN,CAAC,CAAC,CAAA;wCACN,CAAC,CAAC,EAAA;;oCAzBF,SAyBE,CAAA;;;;;;+BA3BiB,GAAG;;;;;;;kDAAf,QAAQ;;;;;;;;wCA8BR,UAAU;;;;;oCACX,SAAS,GAAG,KAAK,CAAC,UAAU,CAAC,CAAC;oCACpC,qBAAM,IAAI,OAAO,CAAO,UAAC,OAAO;4CAC5B,EAAE,CAAC,QAAQ,CAAC,YAAY,CAAC,SAAS,EAAE,UAAC,GAAG;gDACpC,IAAI,GAAG,EAAE;oDACL,OAAO,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;iDAC7B;gDACD,OAAO,EAAE,CAAC;gDACV,QAAQ,IAAI,QAAQ,CAChB,SAAS,EACT,CAAC,UAAU,GAAG,CAAC,GAAG,GAAG,CAAC,MAAM,EAC5B,QAAQ,EACR,WAAS,SAAS,cAAQ,CAAC,UAAU,GAAG,CAAC,UAAI,KAAK,CAAC,MAAM,MAAG,CAC/D,CAAC;4CACN,CAAC,CAAC,CAAC;wCACP,CAAC,CAAC,EAAA;;oCAbF,SAaE,CAAA;;;;;;+BAfmB,KAAK;;;;;;;kDAAnB,UAAU;;;;;;;;;;;CAiBxB;AAlFD,8BAkFC;AAAA,CAAC","file":"","sourceRoot":"/","sourcesContent":["\r\n/**\r\n * 加载子包\r\n * @param packages - 子包名数组\r\n * @param callback - 回调\r\n */\r\nexport default async function packLoading(\r\n    packages: {\r\n        sub?: string[],\r\n        scene?: string[],\r\n    },\r\n    callback?: (\r\n        targetPack: string,\r\n        /**\r\n         * 当前加载下标\r\n         */\r\n        successCount: number,\r\n        /**\r\n         * 加载总数\r\n         */\r\n        allCount: number,\r\n        /**\r\n         * 回执消息内容\r\n         */\r\n        message: string\r\n    ) => boolean,\r\n) {\r\n    //   console.log(cc.loader);\r\n    //   // console.log(Object.keys(cc.loader.downloader._subpackages).length);\r\n    //   console.log(cc.assetManager.bundles);\r\n    //   cc.loader.onProgress = (...params) => {\r\n    //       console.log('onProgress', params);\r\n\r\n    //   }\r\n\r\n    //   if (Object.keys(cc.loader.downloader._subpackages).length === 0) {\r\n    //       return callback && callback('skip', 1, 1, '跳过加载...');\r\n    //   }\r\n    const { scene, sub } = packages;\r\n    const allCount = scene.length + sub.length;\r\n\r\n    for (const subIndex in sub) {\r\n        const subName = sub[subIndex];\r\n        await new Promise<void>((resolve) => {\r\n            //   cc.loader.downloader.loadSubpackage(subName, (err) => {\r\n            //       if (err) {\r\n            //           return console.error(err);\r\n            //       }\r\n            //       resolve();\r\n            //       callback && callback(\r\n            //           subName,\r\n            //           +subIndex + 1,\r\n            //           allCount,\r\n            //           `subPack/${subName}... [${+subIndex + 1}/${sub.length}]`\r\n            //       );\r\n            //   });\r\n            cc.resources.loadDir(subName, (err) => {\r\n                if (err) {\r\n                    return console.error(err);\r\n                }\r\n                resolve();\r\n                callback && callback(\r\n                    subName,\r\n                    +subIndex + 1,\r\n                    allCount,\r\n                    `subPack/${subName}... [${+subIndex + 1}/${sub.length}]`\r\n                );\r\n            })\r\n        })\r\n    }\r\n\r\n    for (const sceneIndex in scene) {\r\n        const sceneName = scene[sceneIndex];\r\n        await new Promise<void>((resolve) => {\r\n            cc.director.preloadScene(sceneName, (err) => {\r\n                if (err) {\r\n                    return console.error(err);\r\n                }\r\n                resolve();\r\n                callback && callback(\r\n                    sceneName,\r\n                    +sceneIndex + 1 + sub.length,\r\n                    allCount,\r\n                    `scene/${sceneName}... [${+sceneIndex + 1}/${scene.length}]`\r\n                );\r\n            });\r\n        })\r\n    }\r\n};"]}