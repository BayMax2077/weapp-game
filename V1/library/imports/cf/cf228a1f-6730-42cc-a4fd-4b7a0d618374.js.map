{"version":3,"sources":["assets\\scripts\\Games\\fourCards\\FourCardsMain.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/typescript.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nconst {ccclass, property} = cc._decorator;\r\nimport axios from '../../utils/axiosUtils';\r\nimport State from '../../utils/state';\r\nimport { loadImg, setAutoRecursively } from '../../../scripts/lib/tool';\r\nimport { CardList, FourCardsPlayers, SendCardData, UserData } from '../../interface/game/fourCard';\r\n/**\r\n * 扑克牌\r\n */\r\nconst CardItem = cc.Class({\r\n    name: 'cardItem',\r\n    properties: {\r\n        plum: [ cc.SpriteFrame ],  // 梅花\r\n        heart: [ cc.SpriteFrame ], // 红心\r\n        block: [ cc.SpriteFrame ], // 方块\r\n        Spade: [ cc.SpriteFrame ], // 黑桃\r\n        joker: [ cc.SpriteFrame ], // 大小王\r\n    }\r\n});\r\nconst FourCardsPlayersItem = cc.Class({\r\n    name: 'FourCardsPlayers',\r\n    properties: {\r\n        nickname: cc.Label,    // 昵称\r\n        score: cc.Label,       // 分数\r\n        noteScore: cc.Label,   // 抓分分数\r\n        cardCount: cc.Label,   // 剩余扑克牌数量\r\n        avatarUrl: cc.Sprite,  // 头像\r\n        cardPoint: cc.Node,    // 发牌位置\r\n    },\r\n});\r\nlet clock = null;          // 计时器\r\nlet cardList = {};         // 选中的扑克牌\r\nlet countDownClock = null; // 倒计时\r\n\r\n@ccclass\r\nexport default class FourCardsGame extends cc.Component {\r\n    /**\r\n     * 发牌位置\r\n     */\r\n    @property(cc.Node) cardBox: cc.Node = null;\r\n    /**\r\n     * 房间号节点\r\n     */\r\n    @property(cc.Label) roomIdLabel: cc.Label = null;\r\n    /**\r\n     * 玩家节点数据\r\n     */\r\n    @property(FourCardsPlayersItem) FourCardsPlayers: FourCardsPlayers[] = [];\r\n    /**\r\n     * 扑克牌遮罩节点\r\n     */\r\n    @property(cc.Prefab) cardsMask: cc.Prefab = null;\r\n    /**\r\n     * 结算界面资源\r\n     */\r\n    @property(cc.Prefab) chessPrefab: cc.Prefab = null;\r\n    /**\r\n     * 等待加入中 文字\r\n     */\r\n    @property(cc.Node) wait_player_join: cc.Node = null;\r\n    /**\r\n     * 弹窗资源\r\n     */\r\n    @property(cc.Prefab) popupPrefab: cc.Prefab = null;\r\n    /**\r\n     * 倒计时 时钟载体\r\n     */\r\n    @property(cc.Node) clockBox: cc.Node = null;\r\n    /**\r\n     * 倒计时 时钟内容\r\n     */\r\n    @property(cc.Label) clockContent: cc.Label = null;\r\n    /**\r\n     * 发牌按钮\r\n     */\r\n    @property(cc.Button) setpBtn: cc.Button = null;\r\n    /**\r\n     * 跳过的按钮\r\n     */\r\n    @property(cc.Button) skipBtn: cc.Button = null;\r\n    /**\r\n     * 不出文字\r\n     */\r\n    @property(cc.SpriteFrame) skipSpriteFrame: cc.SpriteFrame = null;\r\n    /**\r\n     * 桌面分数\r\n     */\r\n    @property(cc.Label) desktopScore: cc.Label = null;\r\n\r\n    /**\r\n     * 桌面机制\r\n     */\r\n    desktop: { score: number; card: cc.Node[]; } = {\r\n        score: 0,\r\n        card: [],\r\n    };\r\n\r\n    /**\r\n     * 玩家数据\r\n     */\r\n    playersData: UserData[] = [];\r\n    \r\n    /**\r\n     * 房间数据\r\n     */\r\n    roomInfoData: any = {};\r\n\r\n    /**\r\n     * 已有扑克牌\r\n     */\r\n    cardList: CardList[] = [];\r\n\r\n    @property(CardItem)\r\n    Card = {\r\n        /**\r\n         * 梅花\r\n         */\r\n        plum: [],\r\n        /**\r\n         * 红心\r\n         */\r\n        heart: [],\r\n        /**\r\n         * 方块\r\n         */\r\n        block: [],\r\n        /**\r\n         * 黑桃\r\n         */\r\n        Spade: [],\r\n        /**\r\n         * 大小王\r\n         */\r\n        joker: [],\r\n    };\r\n    bindonGameData = (data) => this.onGameData(data);\r\n    bindfetchRoomInfo = (data) => this.fetchRoomInfo(data);\r\n    bindrommleave = (data) => this.rommleave(data);\r\n    history = [];\r\n\r\n    onLoad() {\r\n        const that = this;\r\n        const { setpBtn, skipBtn } = that;\r\n\r\n        setpBtn.node.active = false;\r\n        skipBtn.node.active = false;\r\n\r\n        that.fetchRoomInfo(false);\r\n        State.io.on('fourcard/gameData', that.bindonGameData);\r\n        State.io.on('rommjoin', that.bindfetchRoomInfo);\r\n        State.io.on('rommleave', that.bindrommleave);\r\n        setAutoRecursively([\r\n            'c3a88e04-eee8-42e6-ade2-27c6e1896203',\r\n            'db61dc3a-8854-4824-a19a-472e74d7aa03',\r\n            'fc30fbe0-1668-4af2-8dcb-a798b469719b',\r\n            '0b7da469-5226-4405-aad7-56210d04d191',\r\n        ]);\r\n    }\r\n\r\n\r\n    /**\r\n     * 游戏场景销毁时\r\n     */\r\n    onDestroy() {\r\n        // 接触IM玩家加入房间事件绑定\r\n        State.io.off('fourcard/gameData', this.bindonGameData);\r\n        State.io.off('rommjoin', this.bindfetchRoomInfo);\r\n        State.io.off('rommleave', this.bindrommleave);\r\n    }\r\n\r\n\r\n    /**\r\n     * 接收到游戏数据时\r\n     * @param data - IO数据\r\n     */\r\n    onGameData(data: any) {\r\n        data = typeof data === 'string' ? JSON.parse(data) : data;\r\n        data.callback && data.msg && this[data.callback](data.msg);\r\n    }\r\n\r\n\r\n    /**\r\n     * 允许当前玩家发牌时\r\n     */\r\n    currentUser(data: any) {\r\n        const { setpBtn, skipBtn } = this;\r\n        setpBtn.node.active = true;\r\n        setpBtn.interactable = false;\r\n        skipBtn.node.active = true;\r\n\r\n        // 玩家不出牌时\r\n        if (data && data.prveCard && !data.prveCard.length) {\r\n            const { history } = this;\r\n            data.prveCard = history[2] || history[1] || history[0] || [];\r\n            console.log(data.prveCard, history);\r\n        }\r\n\r\n        // console.log(data);\r\n        // 不可选择的扑克牌屏蔽\r\n        if (data && data.prveCard && data.prveCard.length) { \r\n            let prveMaskShow = !1;\r\n            const prveCardLength = data.prveCard.length;\r\n            const prveCardNumber = data.prveCard[0];\r\n            // console.log(data.prveCard);\r\n\r\n            // 王炸处理[必须为7线及以上]    0为大王（红）   0.1为小王（黑）\r\n            // (4个混王: 7线30分, 5个混王: 8线60分, 6个混王: 9线90分)\r\n            // (4个纯王开始，多一个王加2线)(5个10线120分, 6个12线180分, 7个14线240分, 8个16线300分)\r\n            if ((prveCardNumber === 0 || prveCardNumber === 0.1) && prveCardLength >= 4) {\r\n                let redJoker = 0;\r\n                let blackJoker = 0;\r\n                let lintScore = 0;\r\n                data.prveCard.forEach((num: number) => num === 0 ? redJoker++ : blackJoker++);\r\n\r\n                // 4纯王 + 其他王\r\n                if ((redJoker === 4 || blackJoker === 4) && prveCardLength >= 5) {\r\n                    lintScore = 10 + ((prveCardLength - 5) * 2);\r\n                } else { // 混王\r\n                    lintScore = 7 + (prveCardLength - 4);\r\n                }\r\n\r\n                // 王炸模拟牌数 并调至最大牌\r\n                data.prveCard = new Array(lintScore).fill(0);\r\n                console.log(lintScore + '线');\r\n            }\r\n\r\n            // 普通扑克牌处理\r\n            this.cardList.forEach((card) => {\r\n                if (card.node.children.length === 2) {\r\n                    const label = card.node.children[1].getComponent(cc.Label);\r\n                    if (label) {\r\n                        const cardNumber = Number(label.string);\r\n                        prveMaskShow = !1;\r\n                        if (\r\n                            (prveCardLength >= 4 &&                                                 // 炸弹: 牌数必须大于出牌者的炸弹数量\r\n                                    cardNumber < prveCardLength                                     //       如果牌数量大于等于出牌者 \r\n                                || (cardNumber === prveCardLength && prveCardNumber <= card.number) //       如果牌数量等于出牌者，且牌值小于等于出牌者\r\n                            ) || (\r\n                                   (prveCardLength < 4 && cardNumber < 4)                           // 小于4张非炸弹 且 不能组成炸弹\r\n                                && (cardNumber !== prveCardLength || prveCardNumber <= card.number  // 牌数必须与出牌者相等，并且值大于出牌者\r\n                                )\r\n                            )\r\n                        ) {\r\n                            prveMaskShow = !0;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (prveMaskShow) {\r\n                    card.node.children[0].active = true;\r\n                    card.node.getComponent(cc.Button).interactable = false;\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * 玩家发牌时\r\n     * @param data - IO数据\r\n     */\r\n    userSendCard(data: SendCardData) {\r\n        const { clockBox, clockContent, playersData, FourCardsPlayers } = this;\r\n        const targetUserId = data.userId || 0;\r\n        // const userPointId = this.playersData[targetUserId].index;\r\n        // const targetUser = FourCardsPlayers[userPointId];\r\n        // 上次出牌的玩家出牌显示\r\n        if (targetUserId !== undefined && targetUserId !== this.roomInfoData.playerIndex) {\r\n            this.outCardActuin(data.params, playersData[targetUserId]);\r\n        }\r\n        if (data.next.prveCard) {\r\n            const { history } = this;\r\n            const prevCard = data.next.prveCard;\r\n            history.push(prevCard.length ? prevCard : '');\r\n            if (history.length === playersData.length) history.shift();\r\n            if (history.join('') === '') this.history = [];\r\n        }\r\n\r\n        const { index } = data.next;\r\n        if (index !== undefined) {\r\n            let outTime = 60;\r\n            \r\n            // 倒计时时钟位置\r\n            const dataIndex = this.playersData[index].index;\r\n            const { x, y } = dataIndex !== 0\r\n                ? FourCardsPlayers[dataIndex].cardCount.node.parent\r\n                : { x: -85, y: -50 }\r\n            ;\r\n            clockBox.runAction(\r\n                cc.moveTo(.5, x + (clockBox.width * (dataIndex === 1 ? -1 : 1)), y).easing(cc.easeBackOut()),\r\n            );\r\n\r\n            // 房主负责与服务器通讯\r\n            countDownClock && clearInterval(countDownClock);\r\n            countDownClock = setInterval(() => {\r\n                clockContent.string = (--outTime < 0 ? 0 : outTime).toString();\r\n                if (outTime <= 0) {\r\n                    // 如果为房主则执行io emit否则清除状态\r\n                    if (playersData[0].id === State.userInfo.id) {\r\n                        this.skip();\r\n                    } else {\r\n                        this.resetCard();\r\n                    }\r\n                }\r\n            }, 1000);\r\n        }\r\n\r\n        // 桌面分数显示\r\n        if (data.desktopScore !== undefined) {\r\n            this.desktopScore.string = data.desktopScore.toString();\r\n        }\r\n\r\n        // 判断是否为当前玩家发牌阶段\r\n        if (data.next.index === this.roomInfoData.playerIndex) {\r\n            this.currentUser(data.next);\r\n        }\r\n\r\n        // 分数修改\r\n        if (data.score) {\r\n            this.playersData.forEach((player, i) => {\r\n                const target = FourCardsPlayers[player.index];\r\n                target.score.string = data.score[i].toString();\r\n                target.noteScore.string = data.noteScore[i].toString();\r\n                if (target.cardCount) {\r\n                    target.cardCount.string = data.cardCount[i].toString();\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * 开始游戏\r\n     * @param cardData - 卡牌数组\r\n     */\r\n    gameStart(cardData: Array<{ [key: number]: number }>) {\r\n        const { Card } = this;\r\n        const CardKey = Object.keys(Card);\r\n        this.wait_player_join.active = !1;\r\n        // 模拟发牌\r\n        const { node, cardList } = this;\r\n        const screenHeight = node.height;\r\n        // 扑克牌当前张数\r\n        let cardCount = 0;\r\n        // 排序\r\n        const sortCard = [];\r\n        if (cardData.length === 4) {\r\n            cardData.push({});\r\n        }\r\n        for (let num = 0; num < 13; num++) {\r\n            sortCard[num] = [];\r\n            for (let row = 0; row < cardData.length - 1; row++) {\r\n                const targetCard = cardData[row][num];\r\n                targetCard && sortCard[num].push(...Array(targetCard).fill(row));\r\n            }\r\n        }\r\n        // 大小王\r\n        let jokers = cardData[4];\r\n        if (jokers) {\r\n            sortCard.unshift([]);\r\n            Object.keys(jokers).forEach((num) => {\r\n                jokers[num] && sortCard[0].push(...Array(jokers[num]).fill(num));\r\n            });\r\n        }\r\n        if (!Object.keys(cardData[0]).length) {\r\n            sortCard[0] = [];\r\n        }\r\n        console.log(sortCard, cardData);\r\n        for (let row = 0; row < sortCard.length; row++) {\r\n            const rowItem = sortCard[row];\r\n            for (let col = 0; col < rowItem.length; col++) {\r\n                // 主颜色\r\n                let mainColor = row !== 0 ? rowItem[col] : 4;\r\n                // 子颜色\r\n                let mainChildColor = row !== 0 ? row - 1 : rowItem[col];\r\n                // 当前颜色的扑克牌张数\r\n                const targetFrame = this.Card[CardKey[mainColor]][mainChildColor];\r\n                const newNode = new cc.Node();\r\n                const mask = cc.instantiate(this.cardsMask);\r\n                newNode.addChild(mask);\r\n                mask.active = false;\r\n                newNode.scale = .6;\r\n                const nodeSprice = newNode.addComponent(cc.Sprite);\r\n                nodeSprice.spriteFrame = targetFrame;\r\n                let x, y = 0;\r\n                // 30: 每张牌可见距离， 0.5: 屏幕左侧开始  100: 安全距离\r\n                x = (cardCount * 15) - 400;\r\n                y = 50;\r\n                // 三行判断\r\n                var clickEventHandler = new cc.Component.EventHandler();\r\n                //这个 node 节点是你的事件处理代码组件所属的节点\r\n                clickEventHandler.target = this.node; \r\n\r\n                //这个是代码文件名\r\n                clickEventHandler.component = \"FourCardsMain\";\r\n                clickEventHandler.handler = \"onClickCard\";\r\n                clickEventHandler.customEventData = cardCount.toString();\r\n                const newButton = newNode.addComponent(cc.Button);\r\n                newButton.clickEvents.push(clickEventHandler);\r\n                this.cardBox.addChild(newNode);\r\n\r\n                // 放置到屏幕最上方\r\n                newNode.y = newNode.height + (screenHeight * 2);\r\n\r\n                newNode.x =x;\r\n                newNode.y =y;\r\n                // 显示数字\r\n                if (col === 0 && row !== 0) {\r\n                    this.addCardNumber(rowItem.length, newNode, row);\r\n                }\r\n\r\n                cardList.push({\r\n                    node: newNode,\r\n                    x,\r\n                    y,\r\n                    number: row,\r\n                    row: mainColor,\r\n                    col: mainChildColor,\r\n                    buttonScipt: newButton,\r\n                    clickEventHandler,\r\n                    mask,\r\n                });\r\n                // console.log(mainColor, mainChildColor, row);\r\n                cardCount++;\r\n            }\r\n        }\r\n\r\n        // let updatePoint = 0;\r\n        // let clock = setInterval(() => {\r\n        //     const target = cardList[updatePoint];\r\n        //     if (target && updatePoint < cardList.length && target.node) {\r\n        //         target.node.x = target.x;\r\n        //         target.node.y = target.y;\r\n        //         console.log(target.x);\r\n        //         updatePoint++;\r\n        //     } else {\r\n        //         clearInterval(clock);\r\n        //     }\r\n        // }, 50);\r\n        this.updateCardPoint();\r\n    }\r\n\r\n\r\n    /**\r\n     * 扑克牌点击事件\r\n     * @param e         - 事件体\r\n     * @param cardIndex - 扑克牌下标\r\n     */\r\n    onClickCard(e, cardIndex: string | number) {\r\n        // 判断是为当前玩家的回合\r\n        if (!this.setpBtn.node.active && e) return;\r\n        const groupCardList = this.cardList;\r\n        const cardInfo = groupCardList[cardIndex];\r\n        if (!cardInfo) return;\r\n\r\n        // 如果之前未点击牌则全选当前种类的牌\r\n        const cardListKeys = Object.keys(cardList);\r\n        if (!cardListKeys.length && e) {\r\n            this.cardList.forEach((card, index) => {\r\n                if (card.number === cardInfo.number) {\r\n                    this.onClickCard(false, index);\r\n                }\r\n            });\r\n            return !0;\r\n        } else {\r\n            // 如果选中的牌不同则重选\r\n            const first = cardList[cardListKeys[0]];\r\n            if (first && first.number && first.number !== cardInfo.number) {\r\n                this.cardList.forEach((card, index) => {\r\n                    if (card.number === first.number && groupCardList[index].isSelect) {\r\n                        this.onClickCard(e, index);\r\n                    }\r\n                });\r\n                this.onClickCard(e, cardIndex);\r\n                return !0;\r\n            }\r\n        }\r\n        const targetNode = cardInfo.node;\r\n        targetNode.runAction(\r\n            cc.moveTo(.2, targetNode.x, targetNode.y + (cardInfo.isSelect ? -20 : 20 )).easing(cc.easeBackOut()),\r\n        );\r\n        (cardInfo.isSelect = !cardInfo.isSelect)\r\n            ? cardList[cardIndex] = cardInfo\r\n            : delete cardList[cardIndex]\r\n        ;\r\n        \r\n        this.setpBtn.interactable = !!Object.keys(cardList).length;\r\n    }\r\n\r\n\r\n    /**\r\n     * 发牌\r\n     *  - 选中的牌进行发牌操作\r\n     */\r\n    dealCards() {\r\n        // 销毁桌前的扑克牌\r\n        if (this.desktop.card.length) {\r\n            this.desktop.card.forEach((card) => card.destroy());\r\n            this.desktop.card = [];\r\n        }\r\n        const selectCard = [];\r\n        const numberCard = [];\r\n        this.cardList.forEach((item, index) => {\r\n            if (item.isSelect) {\r\n                selectCard.push(index);\r\n                numberCard.push({\r\n                    r: item.row,\r\n                    c: item.col,\r\n                    n: item.number,\r\n                });\r\n            }\r\n            item.node.children[0].active = false;\r\n        });\r\n        this.resetCard();\r\n        cardList = {};\r\n        State.io.emit('fourCards/setp', numberCard);\r\n        this.outCardActuin(selectCard, this.playersData[this.roomInfoData.playerIndex]);\r\n    }\r\n\r\n\r\n    /**\r\n     * 跳过本轮\r\n     */\r\n    skip() {\r\n        this.resetCard();\r\n        State.io.emit('fourCards/setp', '');\r\n    }\r\n\r\n\r\n    /**\r\n     * 恢复初始状态\r\n     */\r\n    resetCard() {\r\n        this.setpBtn.node.active = false;\r\n        this.skipBtn.node.active = false;\r\n        \r\n        this.cardList.forEach((item, index) => {\r\n            item.node.children[0].active = false;\r\n            item.node.getComponent(cc.Button).interactable = true;\r\n            if (item.isSelect) {\r\n                this.onClickCard(false, index);\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    /**\r\n     * 发牌动作\r\n     */\r\n    outCardActuin(cards, player) {\r\n        if (!player) return;\r\n        const { index } = player;\r\n        const { cardList } = this;\r\n        const { cardPoint } = this.FourCardsPlayers[index];\r\n        const cardsReverse = [];\r\n\r\n        if (index === 0) {\r\n            console.log(cards);\r\n            cards.reverse().forEach((card) => {\r\n                cardsReverse.push(cardList.splice(card, 1));\r\n            });\r\n            cardsReverse.reverse().forEach((card, offset) => {\r\n                if (card[0]) {\r\n                    const node = card[0].node;\r\n                    // 出牌后删除纸牌上的数字\r\n                    if (node.children.length === 2) {\r\n                        node.children[1].destroy();\r\n                    }\r\n                    // 扑克牌缓动效果\r\n                    node.runAction(\r\n                        cc.moveTo(.2, cardPoint.x + (15 * offset) - 400, cardPoint.y).easing(cc.easeBackOut()),\r\n                    );\r\n                    this.desktop.card.push(node);\r\n                }\r\n            });\r\n        } else {\r\n            const cardKey = Object.keys(this.Card);\r\n            cardPoint.removeAllChildren();\r\n            (cards || []).forEach((card, offset) => {\r\n                // console.log(cardKey[card.r], cardKey, card.r, this.Card[cardKey[card.r]]);\r\n                const targetFrame = this.Card[cardKey[card.r]][card.c];\r\n                const newNode = new cc.Node();\r\n                newNode.scale = .4;\r\n                newNode.x += 10 * offset;\r\n                newNode.y = cardPoint.y;\r\n                const nodeSprice = newNode.addComponent(cc.Sprite);\r\n                nodeSprice.spriteFrame = targetFrame;\r\n                cardPoint.addChild(newNode);\r\n            });\r\n        }\r\n\r\n        if (!cards) {\r\n            const newNode = new cc.Node();\r\n            newNode.addComponent(cc.Sprite).spriteFrame = this.skipSpriteFrame;\r\n            newNode.scale = .6;\r\n            cardPoint.addChild(newNode);\r\n            if (index === 0) {\r\n                newNode.x = 0;\r\n                newNode.y = 0;\r\n            }\r\n            setTimeout(() => {\r\n                newNode.destroy();\r\n            }, 1500);\r\n        }\r\n        this.updateCardPoint();\r\n    }\r\n\r\n\r\n    /**\r\n     * 重新刷新扑克牌位置\r\n     */\r\n    updateCardPoint() {\r\n        const { cardList } = this;\r\n        let prevNumber = -1; // 上类扑克牌标识\r\n        let prevCount = 0;   // 上类扑克牌数量\r\n        let prevNode = null; // 上类扑克牌节点\r\n        cardList.forEach((card, index) => {\r\n            // card.node.x = index * 15;\r\n            const { node } = card;\r\n            card.clickEventHandler.customEventData = index;\r\n\r\n            // 如果判定到位最后一张非同类牌 进行重置\r\n            if (prevNumber !== card.number || index === cardList.length - 1) {\r\n                if (prevNode) {\r\n                    // 如果为全部的最后一张牌\r\n                    if (index == cardList.length - 1 && prevNumber !== card.number) { \r\n                        if (card.node.children.length !== 2) {\r\n                            this.addCardNumber('1', card.node, prevNumber);\r\n                        } else {\r\n                            const labelNode = card.node.children[1].getComponent(cc.Label);\r\n                            if (labelNode.string && labelNode.string !== '1') {\r\n                                labelNode.string = '1';\r\n                            }\r\n                        }\r\n                    }\r\n                    // 如果目标扑克牌存在文本节点则修改内容 否则 创建文本节点\r\n                    let prevCountStr = prevCount.toString();\r\n                    if (prevNode.node.children.length !== 2) {\r\n                        this.addCardNumber(prevCountStr, prevNode.node, prevNumber);\r\n                    } else {\r\n                        const labelNode = prevNode.node.children[1].getComponent(cc.Label);\r\n                        if (labelNode.string && labelNode.string !== prevCountStr) {\r\n                            if (index == cardList.length - 1) {\r\n                                prevCountStr = (++prevCount).toString();\r\n                            }\r\n                            labelNode.string = prevCountStr;\r\n                        }\r\n                    }\r\n                }\r\n                prevNumber = card.number;\r\n                prevCount = 0;\r\n                prevNode = card;\r\n            }\r\n            prevCount++;\r\n            node.runAction(\r\n                cc.moveTo(.5, index * 15 - 400, node.y).easing(cc.easeBackOut()),\r\n            )\r\n        });\r\n    }\r\n\r\n    \r\n    /**\r\n     * 当玩家加入房间时\r\n     */\r\n    fetchRoomInfo(data) {\r\n        const MyUserData = State.userInfo;\r\n        axios.api('room_info').then(res => {\r\n            this.playersData = [];\r\n            const myPlayer = this.FourCardsPlayers[0];\r\n            let outherPlayer = 1;\r\n            loadImg(\r\n                MyUserData.avatarUrl,\r\n                spriteFrame => {\r\n                    myPlayer.avatarUrl.spriteFrame = spriteFrame;\r\n                    myPlayer.noteScore.string = '0';\r\n                    myPlayer.cardCount && (myPlayer.cardCount.string = '54');\r\n                    myPlayer.score.string = '0';\r\n                },\r\n                'avatar',\r\n                MyUserData.id\r\n            );\r\n            this.playersData = res.players.map((player, index) => {\r\n                if (index !== res.playerIndex) {\r\n                    const target = this.FourCardsPlayers[outherPlayer];\r\n                    player.index = outherPlayer;\r\n                    target.nickname.string = player.nickname;\r\n                    loadImg(\r\n                        player.avatarUrl,\r\n                        (spriteFrame) => {\r\n                            target.avatarUrl.spriteFrame = spriteFrame;\r\n                        },\r\n                        'avatar',\r\n                        player.id\r\n                    );\r\n                    outherPlayer++;\r\n                } else {\r\n                    player.index = 0;\r\n                }\r\n                return player;\r\n            });\r\n\r\n            // 检测是否已经开始游戏\r\n            if (res.isStart && res.players[res.playerIndex]) {\r\n                this.gameStart(res.players[res.playerIndex].card);\r\n\r\n                // 判断自己是否可以先手出牌\r\n                const sendData: any = {\r\n                    next: {\r\n                        index: res.gameData.target,\r\n                    },\r\n                };\r\n                this.userSendCard(sendData);\r\n                if (res.gameData.target === res.playerIndex) {\r\n                    this.currentUser(false);\r\n                }\r\n            }\r\n            this.roomInfoData = res;\r\n            this.roomIdLabel.string = `房间号: ${res.roomCode || '错误'}`;\r\n        });\r\n    }\r\n\r\n\r\n    /**\r\n     * 玩家离开游戏时\r\n     * @param data - 数据\r\n     */\r\n    rommleave(ioData) {\r\n        ioData = JSON.parse(ioData);\r\n        if (ioData && ioData.data && ioData.data.id === this.playersData[0].id) {\r\n            this.gameOver({ type: 0 });\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * 游戏结束\r\n     * @param data\r\n     *  - false: 房主离开游戏触发\r\n     * \r\n     */\r\n    gameOver(data: any | false) {\r\n        console.log(data);\r\n        const { playersData, node, popupPrefab, FourCardsPlayers } = this;\r\n        if (data && data.type !== 0) {\r\n            this.gameOver = () => {};\r\n            const chessPrefab = cc.instantiate(this.chessPrefab);\r\n            const chessScript = chessPrefab.getComponent('overScript');\r\n            const chessData: any = [];\r\n            let winner = null;\r\n            playersData.forEach((player, index) => {\r\n                const gamedata = data.gameData;\r\n                const score = gamedata.score[index];\r\n                chessData.push({\r\n                    nickname: player.nickname,\r\n                    avatarUrl: FourCardsPlayers[index].avatarUrl.spriteFrame,\r\n                    score,\r\n                    item: {\r\n                        noteScore: gamedata.noteScore[index],\r\n                    },\r\n                });\r\n                if (!winner || winner.score < score) {\r\n                    winner = {\r\n                        player,\r\n                        score,\r\n                    };\r\n                }\r\n            });\r\n\r\n            // 赢家显示\r\n            if (winner) {\r\n                winner.player.winner = true;\r\n            }\r\n\r\n            chessScript.init({\r\n                players: chessData,\r\n                itemKey: {\r\n                    noteScore: '抓分',\r\n                },\r\n                time: data.gameData.createTime,\r\n                roomId: data.roomCode,\r\n            });\r\n            this.node.addChild(chessPrefab);\r\n            this.roomExit();\r\n        } else if (this.roomInfoData.playerIndex !== 0) {\r\n            const popup = cc.instantiate(popupPrefab);\r\n            const scriptPopup = popup.getComponent('popup');\r\n            cc.director.getScene().addChild(popup);\r\n            scriptPopup.init('房主已将房间解散!');\r\n            scriptPopup.setEvent('success', () => {\r\n                popup.destroy();\r\n                this.roomExit();\r\n                cc.director.loadScene('Home');\r\n            });\r\n        } else if (this.playersData.length === 1) {\r\n            this.roomExit();\r\n            cc.director.loadScene('Home');\r\n        }\r\n\r\n        clock && clearInterval(clock);\r\n        countDownClock && clearInterval(countDownClock);\r\n        console.log(this.playersData.length);\r\n    }\r\n\r\n    \r\n    /**\r\n     * 退出房间\r\n     */\r\n    roomExit() {\r\n        axios.api('room_exit', {\r\n            data: {\r\n                roomCode: this.roomInfoData.id,\r\n            },\r\n        }).then(() => {});\r\n    }\r\n\r\n\r\n    /**\r\n     * 返回首页\r\n     */\r\n    backHome() {\r\n        const { playersData, node, popupPrefab } = this;\r\n        // console.log(State, playersData);\r\n        if (!playersData.length || playersData.length === 1) {\r\n            return this.gameOver(false);\r\n        }\r\n        const popup = cc.instantiate(popupPrefab);\r\n        const scriptPopup = popup.getComponent('popup');\r\n        cc.director.getScene().addChild(popup);\r\n        playersData.forEach((item, index: number) => {\r\n            if (item.id === State.userInfo.id) {\r\n                console.log(index);\r\n                scriptPopup.init('是否要返回大厅?\\n' + (index ? '将退出房间' : '房间将被解散'));\r\n                scriptPopup.setEvent('success', () => {\r\n                    popup.destroy();\r\n                    this.roomExit();\r\n                    cc.director.loadScene('Home');\r\n                });\r\n                scriptPopup.setEvent('close', () => {});\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    /**\r\n     * 暂停游戏\r\n     */\r\n    stopGames() {\r\n        cc.loader.loadRes('prefab/stopGames', cc.Prefab, (err, prefab) => {\r\n            if (prefab) {\r\n                const popup = cc.instantiate(prefab);\r\n                cc.director.getScene().addChild(popup);\r\n                const stopGames = popup.getComponent('stopGames');\r\n                stopGames.backHomeEvent = () => {\r\n                    this.backHome();\r\n                };\r\n                // 设置分享\r\n                const { roomCode } = this.roomInfoData;\r\n                stopGames.shareData = {\r\n                    title: `我们一起来[${roomCode}]玩四副牌吧!`,\r\n                    imageUrl: State.OSS_BASE + '/H5Game/share/FourCards.jpg',\r\n                    query: `fn=joinRoom&roomCode=${roomCode}`,\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    /**\r\n     * 为扑克牌添加数量\r\n     * @param number     - 扑克牌数量\r\n     * @param newNode    - 扑克牌节点\r\n     * @param cardNumber - 扑克牌点数\r\n     */\r\n    addCardNumber(number: string, newNode: any, cardNumber: number) {\r\n        const labelNode = new cc.Node();\r\n        const label = labelNode.addComponent(cc.Label);\r\n        label.string = number;\r\n        labelNode.x = -50   ;\r\n        labelNode.y += 20;\r\n        labelNode.color = cardNumber ? cc.color(63, 110, 146) : cc.color(222, 222, 222);\r\n        label.fontSize = 30;\r\n        newNode.addChild(labelNode);\r\n    }\r\n}\r\n"]}